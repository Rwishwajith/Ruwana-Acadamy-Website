@model RuwanaAcademy_Enterprise.Areas.Lecturer.Models.LecturePaymentDetailsVM

@{ Html.RenderPartial("~/Areas/Base/Views/Shared/_PartialAlert.cshtml"); }

@using (Html.BeginForm())
{
    <br />
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.LecPaymentID)
        @Html.HiddenFor(model => model.LecturerRateID)
        @Html.HiddenFor(model => model.LecPayDetailsID)

        <div class="form-group">
            @Html.LabelFor(model => model.ClassID, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.PopUpSelectorFor(model => model.ClassID, "Base", "Data", "GetClass", new { @class = "form-control", @readonly = "readonly" }, "Please select a Class", new { idsToExcluede = ViewBag.Classes }, dspFormat: "{1} - {6}", hiddenIndices: "0")
                @Html.ValidationMessageFor(model => model.ClassID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MonthForPay, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EnumEditorFor(model => model.MonthForPay, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MonthForPay, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PaidStudentCount, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.PaidStudentCount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.PaidStudentCount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LectureRate, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.LectureRate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.LectureRate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="pull-right">
            <p>
                <div class="btn-toolbar">
                    <input type="submit" value="Save" class="btn btn-primary" style="min-width:75px" />
                    <input type="button" value="Cancel" class="btn btn-default" style="min-width:75px" />
                </div>
            </p>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

